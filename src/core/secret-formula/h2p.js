import { DC } from "../constants";

export const h2p = {
  /**
   * @template
   * {
   *  @property {String} name   Internal name for the tab entry
   *  @property {String} alias  Display name for the tab; if not present, will use the internal name
   *  @property {Number} id     Unique ID for each entry (generated in-game, not explicitly stated)
   *  @property {function: @return String} info         Text body of information for the entry
   *  @property {function: @return Boolean} isUnlocked  Condition for when the entry is visible and searchable
   *  @property {Array: String} tags  List of keywords which are linked to this tab in the search function
   *  @property {String} tab    Key of a tab+subtab combination which will default the h2p to this entry if opened
   * }
   */
  tabs: [
    {
      name: "Это окно",
      info: () => `
Добро пожаловать в помощь по игре!
<br>
<br>
Это окно содержит подробное объяснение всего контента в игре. По мере разблокировки новых механик вам будут становится
доступными соответствующие страницы помощи по игре. Если у вас возникнут вопросы о сути какой-то механики в игре, вы
найдёте объяснение здесь. 
<br>
<br>
Изначально при открытии помощи по игре открывается эта страница. С тех пор как вы впервые получаете Расширение Измерений,
при открытии помощи по игре открывается та страница, которая наиболее актуальна для контента, содержащегося в вашей
текущей вкладке, если такая страница существует.
`,
      isUnlocked: () => true,
      tags: ["помощь"],
      tab: ""
    },
    {
      name: "Ваше сохранение",
      info: () => `
Данные текущего состояния игры хранятся на вашем компьютере в данных браузера. Это значит, что при очищении кэша или
файлов cookie вашего браузера ваше сохранение будет удалено. В частности, если вы играете в режиме инкогнито, весь ваш
прогресс пропадёт при закрытии игры. Кроме того, если вы откроете игру в другом браузере или на другом устройстве, вы не
найдёте там своё сохранение.
<br>
<br>
Вы можете перемещать сохранения между браузерами и устройствами, используя экспорт. Опция "Экспортировать сохранение"
копирует в буфер обмена <i>очень</i> длинную на вид случайную строку. Она содержит данные текущего состояния игры,
которые вы можете загрузить в игру, используя импорт. Чтобы импорт сохранения прошёл успешно, необходимо всё сохранение
целиком, иначе игра не распознает его. Будьте внимательны: некоторые приложения для передачи текста могут отрезать часть
сохранения, если вы используете их для перемещения вашего сохранения с одного устройства на другое.
<br>
<br>
Допустимое сохранение должно начинаться с символов <b>${GameSaveSerializer.startingString.savefile}</b> и заканчиваться
символами <b>${GameSaveSerializer.endingString.savefile}</b>. Сохранения, экспортированные до выхода в свет реальности,
вместо этого начинаются с символов <b>eyJ</b> и заканчиваются символами <b>In19</b>, <b>fX0=</b> или <b>fQ==</b>.
Если ваше сохранение не удовлетворяет ни одному из этих форматов, то, вероятно, оно было обрезано, и импортировать его
не удастся. Импортировать и экспортировать сохранения можно не только через буфер обмена, но и в виде текстовых файлов.
<br>
<br>
В игре существует три слота для сохранений, доступных по кнопке "Выбрать сохранение". В общем и целом три сохранения,
содержащиеся в них, полностью независимы. При импорте замещается только одно из них. <b>Однако все они будут удалены
при очистке данных браузера.</b>
<br>
<br>
Игра автоматически периодически сохраняется, по умолчанию - раз в ${formatInt(30)} секунд. Помните об этом, когда
закрываете игру - то, что вы сделаете непосредственно, перед тем как закрыть игру, может не сохраниться, если вы не
дождётесь автоматического сохранения или не сохраните игру вручную. Интервал автоматического сохранения можно изменить;
время, прошедшее с момента последнего сохранения, отображено в левом нижнем углу экрана.
<br>
<br>
Периодически игра также автоматически делает резервные сохранения, которые доступны по кнопке "Раскрыть меню автоматических
резервных сохранений". Их можно импортировать, если вы хотите отменить какое-то действие.
<br>
<br>
Вы также можете в любой момент сбросить своё сохранение по кнопке "СБРОСИТЬ ЭТО СОХРАНЕНИЕ". Вам будет предолжено ввести
фразу, подтверждающую, что вы намеренно сбрасываете сохранение. Сброшено будет только текущее сохранение, другие два
останутся нетронуты. <b>Полный сброс сохранения необратим, не даёт никаких бонусов и не разблокирует ничего секретного.</b>
`,
      isUnlocked: () => true,
      tags: ["сохранение", "импорт", "экспорт", "сброс"],
      tab: "options/saving"
    },
    {
      name: "Внешний вид",
      info: () => `
В игре существует два интерфейса - Классический, максимально сохраняющий старый дизайн игры до выхода в свет реальности,
и Современный, придерживающийся более современных принципов дизайна. Кроме того, игра имеет разные темы, на которых она
выглядит совершенно по-разному. Есть секретные темы, они разблокируются путём импорта их названий вместо сохранения.
Все темы поддерживаются обоими интерфейсами.
<br>
<br>
Все числа в игре по умолчанию отображаются в Смешанной научной нотации, но существует и множество других нотаций, доступных
по кнопке "Нотация". Большинство этих нотаций шуточные, форматирующие числа так, что текст вываливается за края полей,
в которых он содержится - это не ошибка. Также вы можете настроить отображение больших порядков чисел по кнопке
"Раскрыть настройки записи порядка", однако изменение этих настроек также может привести к тому, что текст будет выглядеть странно.
<br>
<br>
Многие события в игре вызывают анимации на весь экран или всплывание окон подтверждения. Большинство этих анимаций и
подтверждений могут быть отключены по отдельности во вкладке "Настройки", но, как правило, такая возможность появляется,
только после того как вы просмотрите данные анимацию или подтверждение хотя бы один раз.
`,
      isUnlocked: () => true,
      tags: ["внешний", "вид", "интерфейс", "тема", "нотация", "пробел", "порядок", "анимация", "подтверждение",
        "классический", "современный"],
      tab: "options/visual"
    },
    {
      name: "Офлайн-прогресс",
      info: () => `
В "Измерениях Антиматерии" есть система, которая при открытии игры симулирует прогресс, который вы получили бы, если бы
игра была открыта всё то время, когда она была закрыта. Эта симуляция не совсем точная, так как игра слишком сложна
математически, чтобы симулировать её с абсолютной точностью за разумное время. Завершив симулирование, игра показывает
вам окно с информацией о том, какие важные параметры изменились и на сколько.
<br>
<br>
Если оставить игру открытой, но остановить вкладку с ней, время бездействия вкладки также будет симулировано как офлайн-прогресс.
Поскольку разные устройства по-разному обрабатывают эту ситуацию, подробное симулирование этого времени может оказаться
нежелательным. В таком случае вы можете выключить его во вкладке "Настройки", и игра будет симулировать это время одним тиком.
<br>
<br>
Всё в игре обновляется раз в тик - все измерения и другие ресурсы производят по одной единице ресурса, вся автоматика
срабатывает единожды, значения всех множителей и других параметров обновляются, и, наконец, обновляется интерфейс. По
умолчанию игра рассчитывает ${formatInt(20)} тиков в секунду, но это можно изменить во вкладке "Настройки". Сейчас игра
рассчитывает ${format(1000 / player.options.updateRate, 2, 1)} тика в секунду, хотя задержки и особенности структуры
кода игры приводят к тому, что длительность тиков варьируется в диапазоне шириной в несколько миллисекунд.
<br>
<br>
Во время симуляции офлайн-прогресса каждый тик симулирует такое количество времени, чтобы в сумме симулировать ровно
столько времени, сколько вы отсутствовали в игре. Например, при ${formatInt(1000)} офлайн-тиков, если вы отстутствовали
в игре в течение часа, то каждый тик симулирует ${format(3.6, 1, 1)} секунды прогресса. Такая неточность, как правило,
не критична, так как большинство ресурсов всё равно производятся линейно. Однако автоматика сильно страдает - в рассмотренной
ситуации она фактически срабатывает лишь раз в ${format(3.6, 1, 1)} секунды, и в некоторых случаях это может сильно
повлиять на прогресс.
<br>
<br>
${player.blackHole[0].unlocked
    ? `<b>Взаимодействие Чёрной Дыры с офлайн-прогрессом:</b> при симулировании офлайн-прогресса время разбивается на
      тики равной длительности по <i>игровому</i> времяисчислению. Поэтому при симулировании может показаться, что
      Чёрная Дыра действует гораздо большую долю времени, чем на самом деле, но игра симулирует фазы действия Чёрной
      Дыры подробнее, так как они дают гораздо больше производства за реальное время. Такое поведение игры благоприятствует
      вам по сравнению с симулированием прогресса с разбиением на тики равной длительности по реальному времяисчислению.
      <br>
      <br>`
    : ""
}
Количество офлайн-тиков можно менять в диапазоне от ${formatInt(500)} до ${formatInt(DC.E6)}. Чем оно больше, тем симулирование
офлайн-прогресса дольше, но в то же время точнее. Тик может симулировать не более одного дня прогресса, так что если вы
очень долго не были в игре и у вас низкое количество офлайн-тиков, вы можете потерять часть прогресса, положенного вам
за время отсутствия.
<br>
<br>
При желании вы можете совсем отключить офлайн-прогресс, например, в целях анализа эффективности стратегий или для
оптимизации спидрана. По умолчанию офлайн-прогресс включён. Обратите внимание, что если офлайн-прогресс отключён, все
таймеры в игре также будут приостановлены и никакая статистика времени не будет меняться.
`,
      isUnlocked: () => true,
      tags: ["офлайн", "прогресс"],
      tab: "options/gameplay"
    }, {
      name: "Наложение эффектов",
      info: () => `
Большинство эффектов улучшений, достижений и других механик в "Измерениях Антиматерии" относятся к одной из трёх категорий:
<br>
- <b>Аддитивные:</b> эффекты, маркированные знаком "+" (или речевым оборотом "увеличить на"). Значения таких эффектов
складываются со значением по умолчанию. При наличии нескольких таких эффектов они складываются между собой. К этой же
категории относятся и эффекты со знаком "-", например, понижения цен на улучшения.
<br>
- <b>Мультипликативные:</b> эффекты, маркированные знаком "×" (или словом "множитель", или речевым оборотом "умножить на").
Значения таких эффектов перемножаются со значением по умолчанию. При наличии нескольких таких эффектов они перемножаются
между собой. К этой же категории относятся и эффекты со знаком "/" ("разделить"), например, понижения цен на улучшения.
<br>
- <b>Степени</b>: эффекты, встречающиеся гораздо реже, маркированные знаком "^" (или словом "степень"). Значение по
умолчанию возводится в степень значений таких эффектов. При наличии нескольких таких эффектов они перемножаются между
собой, что эквивалентно последовательному возведению значения по умолчанию в степени всех значений эффектов, согласно
законам алгебры.
<br>
<br>
Если не сказано, что один эффект <i>замещает</i> другой, все эффекты накладываются друг на друга. Чтобы определить значение
после всех эффектов, сначала отбрасываются все замещённые эффекты, а затем эффекты действуют на значение в таком порядке:
аддитивные, мультипликативные, степени.
<br>
<br>
${PlayerProgress.realityUnlocked() || PlayerProgress.dilationUnlocked()
    ? "Эффекты замедления действуют <i>после</i> всех остальных."
    : ""}
<br>
<br>
${PlayerProgress.realityUnlocked()
    ? `Эффекты глифов действуют особым образом: сначала они накладываются друг на друга, а затем действуют на значение
      по умолчанию. Наложение эффектов глифов друг на друга и на значение по умолчанию не обязательно относятся к
      одной категории: например, эффект глифов, возводящий множитель Измерений Антиматерии в степень, накладывается
      <i>аддитивно на свои копии</i>, затем действует на значение ${formatInt(1)}, и, наконец, действует на множители
      Измерений Антиматерии как <i>степень</i>.`
    : ""}
`,
      isUnlocked: () => true,
      tags: ["эффект", "наложение", "увеличение", "множитель", "степень", "замедление", "глиф"],
      tab: "options/gameplay"
    }, {
      name: "Аббревиатуры",
      info: () => `
Перед вами список аббревиатур, встречающихся в игре. Эта страница будет обновляться по мере достижения вами новых стадий прогресса.
<br>
- <b>ИА</b>: Измерение Антиматерии<br>
- <b>ГА</b>: Галактика Антиматерии<br>
${PlayerProgress.infinityUnlocked() ? "- <b>ОБ</b>: Очко Бесконечности<br>" : ""}
${PlayerProgress.infinityUnlocked() ? "- <b>Исп</b>: Обычное Испытание<br>" : ""}
${player.break || PlayerProgress.eternityUnlocked() ? "- <b>ИспБ</b>: Испытание Бесконечности<br>" : ""}
${InfinityDimension(1).isUnlocked || PlayerProgress.eternityUnlocked() ? "- <b>ИБ</b>: Измерение Бесконечности<br>" : ""}
${PlayerProgress.replicantiUnlocked() ? "- <b>ГР</b>: Галактика Репликанти<br>" : ""}
${PlayerProgress.eternityUnlocked() ? "- <b>ОВ</b>: Очко Вечности<br>" : ""}
${PlayerProgress.eternityUnlocked() ? "- <b>ТВ</b>: Теорема Времени<br>" : ""}
${PlayerProgress.eternityUnlocked() ? "- <b>ИсслВ</b>: Исследование Времени<br>" : ""}
${PlayerProgress.eternityUnlocked() ? "- <b>ИВ</b>: Измерение Времени<br>" : ""}
${PlayerProgress.eternityUnlocked() ? "- <b>ИспВ</b>: Испытание Вечности<br>" : ""}
${PlayerProgress.dilationUnlocked() ? "- <b>ЗВ</b>: Замедленное Время<br>" : ""}
${PlayerProgress.dilationUnlocked() ? "- <b>ТГ</b>: Тахионная Галактика<br>" : ""}
${PlayerProgress.realityUnlocked() ? "- <b>МР</b>: Машина Реальности<br>" : ""}
${PlayerProgress.realityUnlocked() ? "- <b>ОА</b>: Очко Автоматизации<br>" : ""}
${PlayerProgress.realityUnlocked() ? "- <b>ЧД</b>: Чёрная Дыра<br>" : ""}
${TeresaUnlocks.effarig.isUnlocked ? "- <b>РО</b>: Реликтовый Осколок<br>" : ""}
${MachineHandler.isIMUnlocked ? "- <b>ММ</b>: Мнимая Машина<br>" : ""}
${Laitela.isUnlocked ? "- <b>ТМ</b>: Тёмная Материя<br>" : ""}
${Laitela.isUnlocked ? "- <b>ИТМ</b>: Измерение Тёмной Материи<br>" : ""}
${Laitela.isUnlocked ? "- <b>ТЭ</b>: Тёмная Энергия<br>" : ""}
`,
      isUnlocked: () => true,
      tags: ["аббревиатура", "сокращение", "иа", "га", "об", "исп", "испб", "иб", "гр", "ов", "тв", "исслв", "ив", "испв",
        "зв", "тг", "мр", "оа", "чд", "ро", "мм", "тм", "итм", "тэ"],
      tab: ""
    }, {
      name: "Измерения Антиматерии",
      info: () => `
<b>Антиматерия</b> -  это главный ресурс в игре. Вы начинаете игру с ${formatInt(10)} антиматерии, и чтобы начать игру, вы должны
потратить её на 1-е Измерение Антиматерии.
<br>
<br>
<b>Измерения Антиматерии</b> - это ваши производственные единицы. 1-е Измерение Антиматерии производит антиматерию.
Каждое следующее Измерение Антиматерии производит предыдущее, что приводит к полиномиальному росту количества антиматерии.
Всего существует ${formatInt(8)} Измерений Антиматерии.
<br>
<br>
Обратите внимание, что слово "измерение" имеет два значения в игре. Так может называться каждая из производственных
единиц, но, поскольку производственные единицы одного уровня и вида неразличимы между собой, чаще под словом "измерение"
понимается их совокупность как единое целое вместе со всеми её параметрами.
<br>
<br>
<b>Множители:</b> под названием каждого измерения отображается его множитель (например: 1-е Измерение Антиматерии
${formatX(1, 1, 1)}). Производство измерения умножается на это число. Множитель увеличивается в ${formatInt(2)}
раза при покупке ${formatInt(10)} соответствующих измерений. При этом цена измерения умножается на его наценку.
<br>
<br>
<b>Количество</b> измерения отображено в его ряду посередине. Это сумма количеств измерений купленных и произведённых
измерением на уровень выше.
<br>
<br>
<b>Относительный прирост:</b> указан в скобках справа от количества измерения, показывает, на какую долю количество
измерения растёт в секунду. Например, если он равен ${formatPercents(1)}/с, то количество измерения удваивается ежесекундно.
<br>
<br>
<b>Кнопка "Купить всё":</b> покупает 1-е Измерения Антиматерии по ${formatInt(10)}, пока это возможно, затем точно так же 2-е,
и так далее до 8-х, после чего покупает ускорители до упора.
<br>
<br>
<b>Начальные цены измерений:</b> ${Array.range(1, 8)
    .map(tier => format(AntimatterDimension(tier)._baseCost, 2, 2))
    .join(", ")}
<br>
<b>Наценки измерений:</b> ${Array.range(1, 8)
  .map(tier => formatX(AntimatterDimension(tier)._baseCostMultiplier, 2, 2))
  .join(", ")}
<br>
<br>
<b>Горячие клавиши 1, 2, 3, 4, 5, 6, 7, 8</b> покупают по ${formatInt(10)} соответствующих измерений (при одновременном
зажатии клавиши Shift измерения покупаются по одному), <b>M</b> покупает всё.
`,
      isUnlocked: () => true,
      tags: ["измерение", "антиматерия", "иа", "множитель"],
      tab: "dimensions/antimatter"
    }, {
      name: "Ускорители",
      info: () => `
Каждый ускоритель даёт множитель к скорости тика, которая ускоряет производство всех Измерений Антиматерии.
<br>
<br>
<b>Скорость тика:</b> фактически это особый множитель к производству всех Измерений Антиматерии. Она не учитывается в
множителях измерений, но они производят быстрее во столько раз, чему она равна. Скорость тика не имеет никакого отношения
к игровым тикам и называется так лишь по традиции.
<br>
<br>
<b>Ускорители:</b> дают множитель к скорости тика (по умолчанию ${formatX(1.1245, 0, 3)} за ускоритель).
<br>
<br>
<b>Кнопка "Купить все":</b> покупает ускорители до упора.
<br>
<br>
<b>Горячая клавиша T</b> покупает все ускорители, сочетание <b>Shift+T</b> покупает один ускоритель.
`,
      isUnlocked: () => Tickspeed.isUnlocked,
      tags: ["измерение", "ускоритель", "скорость", "тик"],
      tab: ""
    }, {
      name: "Расширения Измерений",
      info: () => `
<b>Расширение Измерений</b> сбрасывает ваше количество антиматерии, Измерений Антиматерии и ускорителей, взамен разблокируя
новое Измерение Антиматерии и давая множитель к Измерениям Антиматерии. Первое Расширение требует ${formatInt(20)} 4-х Измерений,
второе - ${formatInt(20)} 5-х Измерений, и так далее. После разблокировки 8-го Измерения новые измерения не разблокируются,
а требование Расширений Измерений при каждом их получении возрастает на наценку в ${formatInt(15)} 8-х Измерений. При этом
Расширения Измерений продолжают давать множитель к Измерениям Антиматерии.
<br>
<br>
Первое Расширение Измерений даёт множитель ${formatX(2)} только к 1-му Измерению Антиматерии, второе - такой же множитель
к первым ${formatInt(2)} измерениям, и так далее. Таким образом, начиная с восьмого, Расширения дают множитель по ${formatX(2)}
ко всем Измерениям Антиматерии.
<br>
<br>
<b>Горячая клавиша D</b> получает Расширение Измерений.
`,
      isUnlocked: () => true,
      tags: ["расширение", "измерение", "сброс"],
      tab: ""
    }, {
      name: "Галактики Антиматерии",
      info: () => `
<b>Галактика Антиматерии</b> сбрасывает ваше количество антиматерии, Измерений Антиматерии, ускорителей и Расширений
Измерений, взамен увеличивая множитель ускорителя. Каждая из первых двух галактик увеличивает его на ${format(0.02, 0, 2)},
а начиная с третьей, Галактики Антиматерии дают множитель к эффекту ускорителя.
<br>
<br>
Хотя эффект галактики мало влияет на стадии игры, когда у вас мало ускорителей, он быстро станет очень заметным.
<br>
<br>
Первая Галактика Антиматерии требует ${formatInt(80)} 8-х Измерений, и при каждом получении галактик их требование возрастает
на наценку в ${formatInt(60)} 8-х Измерений.
<br>
<b>Наценка на Далёкие Галактики:</b> после ${formatInt(100)} Галактик Антиматерии наценка на них возрастает на ${formatInt(2)}
8-х Измерения при каждом их получении.
<br>
<b>Наценка на Сверхдалёкие Галактики:</b> после ${formatInt(800)} Галактик Антиматерии <i>требование</i> на них возрастает
на ${formatPercents(0.002, 1)} при каждом их получении.
<br>
<br>
<b>Горячая клавиша G</b> получает Галактику Антиматерии.
`,
      isUnlocked: () => true,
      tags: ["галактика", "антиматерия", "сброс"],
      tab: ""
    }, {
      name: "Пожертвование Измерений",
      info: () => `
<b>Пожертвование Измерений</b> разблокируется пятым Расширением Измерений. Оно сбрасывает количество всех Измерений с 1-го по 7-е,
но не их множители. Взамен вы получаете множитель к 8-му Измерению Антиматерии. Таким образом, ваше производство антиматерии будет
сброшено, но через некоторое время утраченные измерения будут компенсированы с лихвой.
<br>
<br>
Множитель Пожертвования Измерений зависит от общего количества пожертвованных 1-х Измерений. Кнопка Пожертвования показывает
не сам множитель, а его относительный прирост при Пожертвовании.
<br>
<br>
<b>Горячая клавиша S</b> совершает Пожертвование Измерений.
`,
      isUnlocked: () => Sacrifice.isVisible,
      tags: ["пожертвование", "измерение", "сброс"],
      tab: ""
    }, {
      name: "Достижения",
      info: () => `
Каждое достижение имеет условие, при выполнении которого оно выполняется. Некоторые достижения имеют награды, которые вы
получаете за их выполение.
<br>
<br>
Кроме того, за каждое выполненное достижение вы получаете множитель ${formatX(1.03, 2, 2)} ко всем Измерениям Антиматерии,
а за каждый ряд выполненных достижений - ${formatX(1.25, 2, 2)}. Этот множитель отображается во вкладке "Достижения".
<br>
<br>
Секретные достижения не дают никаких бонусов.
`,
      isUnlocked: () => true,
      tags: ["достижение"],
      tab: "achievements"
    }, {
      name: "Бесконечность",
      info: () => `
При достижении максимального количества антиматерии (${formatInt(2)}<sup>${formatInt(1024)}</sup>, что примерно равно
${formatPostBreak(Number.MAX_VALUE, 6)}) вы обязаны совершить <i>Большое Сжатие</i>. Оно сбрасывает ваше количество
антиматерии, Измерений Антиматерии, ускорителей, Расширений Измерений и Галактик Антиматерии. Это действие также известно
как <i>бесконечность</i>.
<br>
<br>
Впоследствии вы сможете набирать больше ${formatPostBreak(Number.MAX_VALUE, 6)} антиматерии, но до этого все большие
этого значения числа будут отображаться как <b>Бесконечно</b>.
<br>
<br>
На каждой бесконечности вы получаете <i>Очко Бесконечности</i>, которое можно тратить на улучшения в новой вкладке "Бесконечность".
В каждом столбце улучшения покупаются по порядку сверху вниз. Также вам в статистику добавляется одна бесконечность.
<br>
<br>
Достижение "В дополнениях не нуждаюсь" разблокирует удвоитель ОБ, который может быть куплен многократно. Его цена при
покупке умножается на наценку, равную ${formatInt(10)}.
<br>
<br>
<b>Горячая клавиша C</b> совершает Большое Сжатие.
`,
      isUnlocked: () => PlayerProgress.infinityUnlocked(),
      tags: ["большое", "сжатие", "улучшение", "очко", "бесконечность", "об", "сброс", "престиж"],
      tab: "infinity/upgrades"
    }, {
      name: "Обычные Испытания",
      info: () => `
<b>Обычные Испытания</b> - это отдельные бесконечности; у них есть определённые условия, действующие внутри них,
которые, как правило, невыгодны для вас. Чтобы выполнить испытание, вы должны достичь ${formatPostBreak(Number.MAX_VALUE, 2)}
антиматерии внутри него. 
<br>
<br>
Наградой за выполнение Обычного Испытания служит либо разблокировка новой автоматики, либо возможность улучшать старую.
Испытания можно выполнять заново. Из текущего испытания в любой момент можно выйти по кнопке "Выйти из испытания".
<br>
<br>
При выполнении испытания, как и на обычной бесконечности, вы получаете Очко Бесконечности.
<br>
<br>
Ваша первая бесконечность считается 1-м Обычным Испытанием, поэтому оно сразу разблокируется выполненным.
<br>
<br>
Улучшения Бесконечности из крайнего справа столбца не действуют в испытаниях.
`,
      isUnlocked: () => PlayerProgress.infinityUnlocked(),
      tags: ["обычное", "испытание", "автоматика"],
      tab: "challenges/normal"
    }, {
      name: "Автоматика",
      info: () => `
<b>Автоматика</b> - это система настроек, автоматически покупающих измерения и улучшения и совершающих сбросы. Все настройки
автоматики изменяются из отдела "Автоматика" вкладки "Автоматизация", в том числе настройки автоматики, разблокируемой
на более поздних стадиях игры.
<br>
<br>
<b>Интервал</b> - это время, которое должно пройти между двумя совершениями автоматикой её действия.
<br>
<br>
<b>Опт</b> - это максимальное количество улучшений, которое автоматика может купить за раз.
<br>
<br>
Автоматику Измерений Антиматерии можно настроить на покупку измерений либо по одному, либо до ${formatInt(10)}. Оптовая
покупка возможна только во втором случае.
<br>
<br>
Аналогично, автоматику ускорителей можно настроить на покупку ускорителей либо по одному, либо по максимуму. Вторая
опция становится доступной при выполнении 9-го Обычного Испытания.
<br>
<br>
<b>Настройки автоматики Расширений Измерений:</b> изначально вы можете настроить максимальное количество Расширений,
которое автоматика будет покупать, и количество галактик, начиная с которого, это ограничение игнорируется.
Разблокировав оптовую покупку Расширений Измерений, вы можете настраивать интервал работы автоматики.
<br>
<br>
<b>Опция "Динамическое значение"</b> у автоматики престижа означает, что в режиме совершения престижа при заданном
количестве валюты настройка автоматически адаптируется под изменение общего множителя к получению валюты престижа.
<br>
<br>
<b>Горячая клавиша A</b> приостанавливает или возобновляет всю автоматику. Кроме того, одновременное зажатие клавиши
<b>Alt</b> с другой горячей клавишей переключает автоматику, совершающую то же действие, что и эта клавиша.
`,
      isUnlocked: () => true,
      tags: ["автоматика", "интервал", "опт"],
      tab: "automation/autobuyers"
    }, {
      name: "Преодоление Бесконечности",
      info: () => `
<b>Преодоление Бесконечности</b> - это одноразовый акт перехода в новую стадию игры. Вы получаете возможность набирать
больше ${formatPostBreak(Number.MAX_VALUE, 2)} антиматерии, а в зависимости от максимального количества антиматерии,
достигнутого в текущей бесконечности, вы получаете больше ОБ при Большом Сжатии.
<br>
(Формула: ${format(Math.pow(0.1, 0.75), 6, 6)}x<sup>${formatInt(1)}/${formatInt(308)}</sup>, округляется вниз <i>после</i> всех множителей.)
<br>
<br>
После ${formatPostBreak(Number.MAX_VALUE, 2)} антиматерии на цены Измерений Антиматерии и ускорителей действует вторая
наценка, равная ${formatX(10)}. На неё при каждой покупке умножается первая наценка.
`,
      isUnlocked: () => Autobuyer.bigCrunch.hasMaxedInterval || PlayerProgress.eternityUnlocked(),
      tags: ["преодоление", "бесконечность", "об"],
      tab: "infinity/break"
    }, {
      name: "Измерения Бесконечности",
      info: () => `
<b>Измерения Бесконечности</b> - это новый вид измерений, каждое из которых разблокируется на определённом количестве
антиматерии. Они производят друг друга, как Измерения Антиматерии, а 1-е Измерение Бесконечности производит
<i>Силу Бесконечности</i>, которая даёт множитель ко всем Измерениям Антиматерии. (Формула: x<sup>${formatInt(7)}</sup>.)
<br>
<br>
Измерения Бесконечности покупаются по ${formatInt(10)} за Очки Бесконечности. Аналогично Измерениям Антиматерии, при
покупке Измерения Бесконечности, во-первых, оно получает множитель (но этот множитель отличается для разных Измерений
Бесконечности), а, во-вторых, его цена умножается на наценку.
<br>
<br>
Сила Бесконечности и произведённые (не купленные!) Измерения Бесконечности сбрасываются на Большом Сжатии.
<br>
<br>
<b>Требования разблокировки Измерений Бесконечности:</b> ${Array.range(1, 8)
    .map(tier => formatPostBreak(InfinityDimension(tier)._unlockRequirement))
    .join(", ")}
<br>
<b>Множители за покупку Измерений Бесконечности:</b> ${Array.range(1, 8)
    .map(tier => formatX(InfinityDimension(tier)._powerMultiplier))
    .join(", ")}
<br>
<b>Начальные цены Измерений Бесконечности (в ОБ):</b> ${Array.range(1, 8)
    .map(tier => format(InfinityDimension(tier)._baseCost))
    .join(", ")}
<br>
<b>Наценки Измерений Бесконечности:</b> ${Array.range(1, 8)
    .map(tier => formatX(InfinityDimension(tier)._costMultiplier))
    .join(", ")}
`,
      isUnlocked: () => player.break || PlayerProgress.eternityUnlocked(),
      tags: ["иб", "сила", "бесконечность", "измерение"],
      tab: "dimensions/infinity"
    }, {
      name: "Испытания Бесконечности",
      // This one could use some work!
      info: () => `
<b>Испытания Бесконечности</b> - это новый вид испытаний. Для выполнения каждого из них требуется достичь его
<i>цели</i> - определённого количества антиматерии. При выполнении каждого Испытания Бесконечности вы получаете
уникальную награду. Улучшения Бесконечности из крайнего справа столбца не действуют и в Испытаниях Бесконечности тоже.
<br>
<br>
Каждое Испытание Бесконечности разблокируется на определённом количестве антиматерии.
<br>
<br>
<b>Требования разблокировки Испытаний Бесконечности:</b> ${GameDatabase.challenges.infinity
    .map(ic => formatPostBreak(ic.unlockAM)).join(", ")}
`,
      isUnlocked: () => player.break || PlayerProgress.eternityUnlocked(),
      tags: ["испытание", "бесконечности", "испб"],
      tab: "challenges/infinity"
    }, {
      name: "Репликанти",
      info: () => `
<b>Репликанти</b> можно разблокировать за ${format(DC.E140)} ОБ. Это единственный в своём роде ресурс, который
производит <i>себя</i> и, таким образом, растёт экспоненциально. Количество Репликанти имеет ограничение в
${formatPostBreak(Number.MAX_VALUE, 2)}. Каждый интервал репликации (по умолчанию равный одной секунде) каждая
единица Репликанти с определённой вероятностью (по умолчанию равной ${formatPercents(0.01)}) производит ещё одну
единицу Репликанти. Как интервал, так и вероятность репликации изменяются Улучшениями Репликанти, которые можно
покупать за ОБ. Репликанти сбрасываются на бесконечности.
<br>
<br>
Репликанти дают множитель ко всем Измерениям Бесконечности.
<br>
<br>
Существует третье Улучшение Репликанти, которое увеличивает максимальное количество <i>Галактик Репликанти</i>. Последние
получаются при наличии ${formatPostBreak(Number.MAX_VALUE, 2)} Репликанти путём сброса их количества до ${formatInt(1)}.
Галактики Репликанти - это новый вид галактик, котороые дают тот же самый эффект, что и Галактики Антиматерии, и
сбрасывают те же самые ресурсы, но не влияют на требование Галактик Антиматерии.
<br>
<br>
<b>Горячая клавиша R</b> получает Галактику Репликанти.
<br>
Начальная цена <b>Улучшения Репликанти, увеличивающего вероятность репликации</b>: ${format(DC.E150)} ОБ, наценка: ${formatX(DC.E15)}
<br>
Начальная цена <b>Улучшения Репликанти, уменьшающего интервал репликации</b>: ${format(DC.E140)} ОБ, наценка: ${formatX(DC.E10)}
<br>
Начальная цена <b>Улучшения Репликанти, увеличивающего максимальное количество Галактик Репликанти</b>: ${format(DC.E170)} ОБ,
первая наценка: ${formatX(DC.E25)}, вторая наценка: ${formatX(1e5)} до ${formatInt(100)} разрешённых Галактик Репликанти
и ${formatX(DC.E55)} после, причём при достижении этого рубежа первая наценка умножается на ${format(DC.E200)}. Эта система наценок работает
так же, как наценки Измерений Антиматерии и ускорителя. Начиная с ${formatInt(1000)} разрешённых Галактик Репликанти,
при каждой покупке вторая наценка умножается на третью наценку, которая равна ${formatX(DC.E10)}, причём при достижении этого рубежа
вторая наценка умножается на ${format(DC.E5)}.
`,
      isUnlocked: () => Replicanti.areUnlocked || PlayerProgress.eternityUnlocked(),
      tags: ["репликанти", "интервал", "вероятность", "репликация", "галактика", "улучшение", "сброс"],
      tab: "infinity/replicanti"
    }, {
      name: "Вечность",
      info: () => `
При достижении ${formatPostBreak(Number.MAX_VALUE, 2)} ОБ вы можете совершить вечность. Она сбрасывает всё, что
разблокируется до неё, кроме достижений, рекордов испытаний и статистики в разделе "Общее". Взамен вы получаете
<i>Очки Вечности</i> и разблокируете новый контент. Также вам в статистику добавляется одна вечность.
<br>
<br>
В отличие от первой бесконечности, первая вечность (и, естественно, все последующие - тоже) не вынуждается, и чем
больше Очков Бесконечности вы можете иметь в момент совершения вечности, тем больше Очков Вечности вы получаете.
<br>
(Формула: ${format(Math.pow(0.2, 0.7), 6, 6)}x<sup>log₁₀(${formatInt(5)})/${formatInt(308)}</sup> (степень примерно
равна ${formatInt(1)}/${format(308 / Math.log10(5), 2, 2)}), округляется вниз <i>после</i> всех множителей. Например,
для получения ${formatInt(2)} ОВ необходимо достичь ${formatPostBreak(DC.IP_REQUIREMENT_FOR_2_EP, 2, 2)} ОБ.)
<br>
<br>
<b>Горячая клавиша E</b> совершает вечность.
`,
      isUnlocked: () => PlayerProgress.eternityUnlocked(),
      tags: ["вечность", "ов", "сброс", "очко", "престиж", "улучшение"],
      tab: "eternity/upgrades"
    }, {
      name: "Этапы Вечности",
      info: () => `
<b>Этапы Вечности</b> дают особые эффекты для удобства, каждый из которых начинает действовать с определённого
количества вечностей. Как правило, они предотвращают сброс механик на вечности, разблокируют новую автоматику или
пассивно генерируют ресурсы офлайн.
<br>
<br>
Вся новая автоматика может быть переключена кнопками, расположенными рядом с кнопками совершения тех же действий вручную.
<br>
<br>
Этапы, пассивно генерирующие ресурсы офлайн, работают только при выполнении определённых условий, указанных во
вкладке "Этапы Вечности".
`,
      isUnlocked: () => PlayerProgress.eternityUnlocked(),
      tags: ["этап", "вечность"],
      tab: "eternity/milestones"
    }, {
      name: "Измерения Времени",
      info: () => `
<b>Измерения Времени</b> - это очередной вид измерений, которые покупаются за Очки Вечности. 1-е Измерение Времени
производит <i>Осколки Времени</i>, которые дают вам дополнительные ускорители, не влияющие на цену обычных ускорителей.
Осколки Времени и произведённые (не купленные!) Измерения Времени сбрасываются на вечности.
<br>
<br>
Ускорители, получаемые от Осколков Времени, имеют первую наценку, равную ${formatPercents(0.33)}, а с ${formatInt(FreeTickspeed.softcap)}
ускорителей - вторую наценку, равную ${format(0.0006, 4, 4)}% (около ${formatPercents(0.35)} за ${formatInt(50000)}
ускорителей). Эти наценки работают так же, как и для обычных ускорителей.
<br>
<br>
При покупке Измерения Времени оно получает множитель ${formatX(4)}, а его цена возрастает.
<br>
<br>
Наценки первых четырёх Измерений Времени увеличиваются в ${format(1.5, 1, 1)} раза на ${format(TimeDimension(1)._costIncreaseThresholds[0], 2)}
ОВ и в 1⁷⁄₁₅ (около ${format(22 / 15, 3, 3)}) раза на ${format(TimeDimension(1)._costIncreaseThresholds[1])} ОВ.
Это увеличение имеет обратную силу, так что на этих порогах цены измерений резко возрастают. На ${format(TimeDimension(1)._costIncreaseThresholds[2])}
ОВ наценки всех Измерений Времени возводятся в степень ${formatInt(4)}.
<br>
<b>Начальные цены Измерений Времени (в ОВ):</b> ${Array.range(1, 8)
    .map(tier => format(TimeDimension(tier)._baseCost))
    .join(", ")}
<br>
<b>Наценки Измерений Времени:</b> ${Array.range(1, 8)
    .map(tier => formatX(TimeDimension(tier)._costMultiplier))
    .join(", ")}
`,
      isUnlocked: () => PlayerProgress.eternityUnlocked(),
      tags: ["измерение", "ив", "осколок", "времени", "ускоритель"],
      tab: "dimensions/time"
    }, {
      name: "Исследования Времени",
      info: () => `
<b>Исследования Времени</b> - это особые улучшения, которые покупаются за новую валюту - <i>Теоремы Времени</i>.
<br>
<br>
Теоремы Времени можно покупать за антиматерию, Очки Бесконечности или Очки Вечности. При этом цена Теоремы Времени
за тот же ресурс умножается на наценку, различную для покупок Теорем Времени за разные ресурсы.
<br>
<br>
Исследования Времени расположены в форме Древа. Для покупки каждого Исследования необходимо иметь хотя бы одно из
предшествующих ему или предшествующих предшествующим ему Испытаниям Вечности и хотя бы по одному выполнению каждого
из предшествующих ему Испытаний Вечности. Исключением является Исследование Времени 11, для покупки которого ничего
не требуется, так как оно является корнем Древа. Существуют взаимоисключающие группы Исследований, а именно:
<br>
а) в каждой развилке на три цветных пути можно покупать Исследования лишь в одном из них, и
<br>
б) из каждой пары светлого и тёмного Исследований с общим потомком можно купить лишь одно.
<br>
<br>
При желании вы всегда можете сбросить Исследования Времени на вечности, возвращая себе все потраченные на них Теоремы
Времени, чтобы перестроить ваше Древо.
<br>
<br>
Вы можете нажать на Исследование Времени, зажав клавишу Shift, чтобы попытаться купить все Исследования до него
включительно. При этом Исследования покупаются в порядке по строкам сверху вниз слева направо. По кнопке с иконкой
шестерёнки вы можете настроить этот способ покупки Исследований на выбор заданных вами путей на развилках.
<br>
<br>
Вам доступно ${formatInt(6)} слотов для сохранения Древ Исследований, по умолчанию отмеченных цифрами от 1 до 6,
которые позволяют вам сохранять и быстро загружать нужные вам Древа. Также для хранения Древ Исследований вы можете
экспортировать и импортировать их, как сохранения.
<br>
<br>
<b>Начальные цены и наценки Теорем Времени:</b>
<br>
<b>За антиматерию:</b> начальная цена ${format(DC.E20000)}, наценка ${formatX(DC.E20000)}
<br>
<b>За Очки Бесконечности:</b> начальная цена ${formatInt(1)}, наценка ${formatX(DC.E100)}
<br>
<b>За Очки Вечности:</b> начальная цена ${formatInt(1)}, наценка ${formatX(2)}
`,
      isUnlocked: () => PlayerProgress.eternityUnlocked(),
      tags: ["исследование", "исслв", "теорема", "древо", "времени"],
      tab: "eternity/studies"
    }, {
      name: "Испытания Вечности",
      info: () => `
<b>Испытания Вечности</b> - это очередной вид испытаний, каждое из которых разблокируется соответствующим Исследованием
Времени при выполнении определённого вторичного требования. Это испытания более высокого уровня, чем все предыдущие:
они выполняются в отдельной вечности, а не бесконечности.
<br>
<br>
Целью Испытания Вечности, которой необходимо достичь для его выполнения, является определённое количество ОБ.
Награды Испытаний Вечности действуют вне зависимости от того, есть ли у вас Исследования Времени, разблокирующие их.
<br>
<br>
В данный момент времени может быть разблокировано лишь не более одного Испытания Вечности.
<br>
<br>
Каждое Испытание Вечности имеет ${formatInt(5)} уровней, из которых вы всегда выполняете самый низкий ещё не выполненный
при наличии таковых. С каждым уровнем растут награда, цель и вторичное требование испытания, но не его цена.
<br>
<br>
Выполнив вторичное требование Испытания Вечности однажды, вы освобождаетесь от необходимости выполнять его в
дальнейшем, пока не выполните это испытание. В частности, вторичное требование испытания и само испытание можно
выполнять при разных Исследованиях Времени. Нетрудно догадаться, что для ИспВ11 и ИспВ12 это правило не работает в
силу специфики их требований.
`,
      isUnlocked: () => PlayerProgress.eternityUnlocked(),
      tags: ["испв", "испытание", "вечность", "выполнение"],
      tab: "challenges/eternity"
    }, {
      name: "Замедление Времени",
      info: () => `
<b>Замедление Времени</b> разблокируется особым невозвратимым Исследованием Времени, имеющим определённые вторичные
требования, а именно:
<br>
а) ${formatInt(TimeStudy.dilation.totalTimeTheoremRequirement)} ТВ всего, и
<br>
б) по ${formatInt(5)} выполнений ИспВ11 и ИспВ12.
<br>
<br>
Замедление Времени - это особое испытание, занимающее отдельную вечность, как Испытания Вечности, но более высокого
уровня. Его условие заключается в том, что <i>порядки</i> множителей <i>всех</i> измерений возведены в степень
${format(0.75, 2, 2)}. (Это первый появившийся из эффектов такого типа в игре, которые мы за неимением официального
термина будем называть замедлениями.) Цель Замедления - ${formatPostBreak(Number.MAX_VALUE, 2)} ОБ. За его выполнение
вы получаете новый ресурс - <i>Тахионы</i> - в зависимости от рекордного количества антиматерии, достигнутого в Замедлении.
<br>
<br>
Вы можете замедлять Время сколь угодно много раз, но за счёт этого вы не сможете копить Тахионы, как валюту престижа,
так как количество получаемых Тахионов не добавляется к тому, что вы имеете.
<br>
<br>
Тахионы производят другой новый ресурс - <i>Замедленное Время</i>. Оно даёт Тахионные Галактики - очередной вид галактик,
которые независимы с остальными видами галактик. Замедленное Время также можно тратить на различные улучшения.
`,
      isUnlocked: () => DilationTimeStudyState.studies[1].isBought || PlayerProgress.realityUnlocked(),
      tags: ["замедление", "зв", "время", "тахион", "замедленное", "тахионная", "галактика", "тг", "улучшение"],
      tab: "eternity/dilation"
    }, {
      name: "Реальность",
      info: () => `
При достижении ${formatPostBreak(DC.E4000)} ОВ и выполнении всех достижений из первых ${formatInt(13)} рядов вы можете
купить Исследование Времени, разблокирующее возможность совершить реальность. Она сбрасывает всё, что разблокируется
до неё, кроме рекордов испытаний и статистики в разделе "Общее". Взамен вы получаете <i>Машины Реальности</i>, <i>глиф</i>
и <i>Очко Умения</i> и разблокируете новый контент. Также вам в статистику добавляется одна реальность.
<br>
<br>
В отличие от обоих предыдущих престижей, реальность также сбрасывает достижения из первых ${formatInt(13)} рядов, однако
сохраняет остальные достижения. Вы можете вновь выполнять утраченные достижения, но также вы автоматически восстанавливаете
их по одному раз в ${timeDisplayNoDecimals(30 * 60000, "accusative")} без необходимости выполнять их условия. Достижения
восстанавливаются в порядке по строкам сверху вниз слева направо. Автоматическое восстановление достижений может быть
отключено. При этом его таймер продолжит обратный отсчёт времени до восстановления следующего достижения, но остановится,
дойдя до нуля. Эту опцию можно использовать, чтобы заставлять восстанавливаться те достижения, которые трудно выполнить.
<br>
<br>
Получение Машин Реальности зависит от количества ОВ, которое вы можете иметь в момент совершения реальности.
<br>
(Формула: max(${format(0.00675, 5, 5)}log₁₀(x)-26, ${format(0.001, 3, 3)}x<sup>${format(0.00075, 5, 5)}</sup>), округляется
вниз <i>после</i> всех множителей. До ${formatInt(100)} МР кнопка реальности показывает вам, сколько ОВ нужно для получения
следующей МР.)
<br>
<br>
Уровень получаемого глифа зависит от количества ОВ, которое вы можете иметь в момент совершения реальности, и рекордных
количеств Репликанти и Замедленного Времени в текущей реальности, округляется вниз <i>после</i> всех множителей и не
может быть меньше ${formatInt(1)}.
<br>
<br>
Вы всегда получаете ровно одно Очко Умения на реальности.
<br>
<br>
Совершив реальность, вы можете в любой момент перезапустить текущую реальность из вкладки "Глифы", <b>при этом набор
предлагаемых вам глифов не меняется. Вы также не получаете никаких наград за текущую реальность.</b>
<br>
<br>
<b>Горячая клавиша Y</b> совершает реальность.
`,
      isUnlocked: () => PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought,
      tags: ["мр", "машина", "глиф", "очко", "сброс", "умения", "реальность", "престиж", "улучшение"],
      tab: "reality/upgrades"
    }, {
      name: "Глифы",
      info: () => `
<b>Глиф</b> - это предмет со следующими неизменными характеристиками:
<br>
<b>Эффекты</b> - бонусы, которые вам даёт глиф, когда он действует. Каждый эффект глифа соответствует точке на нём.
Глиф может иметь от одного до четырёх эффектов. Количество эффектов случайно, но коррелирует положительно с редкостью
и уровнем. Сами эффекты выбираются случайным образом, но каждый из эффектов, всегда возводящих множители измерений
определённого типа в степень, присутсвует на всех глифах сответствующего типа.
<br>
<b>Тип</b> - разновидность глифа, выбираемая случайным образом, определяющая, какие эффекты он может иметь. Отражён в
значке глифа, в последнем слове в его заглавии и в цвете его каймы. Существует пять основных типов глифов. У каждого из
них четыре уникальных эффекта.
<br>
<b>Уровень</b> - единственная детерминированная характеристика глифа, которая выражается натуральным числом и определяет
мощность его эффектов. Зависит от рекордных количеств различных ресурсов в реальности, на которой глиф был получен.
<br>
<b>Редкость</b> - случайная дробь от ${formatPercents(0)} до ${formatPercents(1)}, которая определяет мощность эффектов
глифа. Округляется до десятых долей процента. Весь диапазон возможных редкостей разбит на категории с собственными названиями.
Категория редкости глифа отражена в первом слове в его заглавии и в цвете его значка.
<br>
<br>
Первый глиф у всех игроков имеет одинаковые тип, эффект и редкость. Далее на каждой реальности вы получаете по одному
случайному глифу. При наличии навыка СТАРТ генерируется четыре случайных глифа разных типов, из которых вы можете
выбрать любой на ваше усмотрение.
<br>
<br>
В центре вкладки вы можете видеть серые кружочки. Это слоты для глифов. Чтобы активировать глиф, перетяните его в
свободный слот или дважды щёлкните по нему. Только тогда глиф будет давать бонусы.
<br>
<br>
Активировать глифы можно свободно в любое время, но деактивировать - только на реальности. Для этого также можно
использовать кнопку "Перезапустить текущую реальность".
<br>
<br>
Вы можете нажать на группу круглых глифов, чтобы просмотреть подробную информацию о них с сокращёнными описаниями эффектов.
`,
      isUnlocked: () => PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought,
      tags: ["реальность", "глиф", "уровень", "редкость", "тип"],
      tab: "reality/glyphs"
    }, {
      name: "Навыки",
      info: () => `
<b>Навыки</b>, как Этапы Вечности, в основном служат для удобства и автоматизации. Цвет Навыка показывает, к какой
игровой системе относится его эффект. Каждый Навык стоит ровно ${formatInt(1)} Очко Умения.
<br>
<br>
Навыки расположены в виде Древа, которое, в отличие Древа Исследований, не ориентировано в одном направлении - для
покупки Навыка достаточно иметь любой из соседних с ним вне зависимости от направления соединения. Корнем Древа Навыков
является Навык СТАРТ, для покупки которого ничего не требуется.
<br>
<br>
Квадратные навыки также дают определённое количество Очков Автоматизации.
`,
      isUnlocked: () => PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought,
      tags: ["навык", "очко", "умения", "древо", "автоматизации"],
      tab: "reality/perks"
    }, {
      name: "Обзор Автоматизатора",
      info: () => `
<b>Автоматизатор</b> представляет собой автоматическую систему, которую можно программировать на алгоритмическое совершение
некоторых действий, не имеющих собственной автоматики.
<br>
<br>
Чтобы использовать Автоматизатор, нужно написать для него программу, которую он будет выполнять. Для игроков, не имеющих
опыта программирования, в Автоматизаторе есть блочный режим редактирования, в котором каждая команда представлена блоком,
что упрощает восприятие программного кода. Однако рекомендуется пользоваться текстовым режимом, так как он в гораздо
меньшей степени подвержен зависанию игры.
<br>
<br>
Программы для Автоматизатора можно экспортировать и импортировать, как сохранения. Допустимые данные программы должны
начинаться с символов <b>${GameSaveSerializer.startingString["automator script"]}</b> и заканчиваться символами
<b>${GameSaveSerializer.endingString["automator script"]}</b>. Если данные не удовлетворяют этому формату, то, вероятно,
они были обрезаны, и импортировать их не удастся. Импорт программы не стирает текущую программу.
<br>
<br>
Автоматизатор выполняет программы по своим собственным часам, использующим реальное времяисчисление, асинхронно со всеми
остальными механиками игры. В частности, это значит, что если автоматика и Автоматизатор пытаются совершить одно и то
же действие, то невозможно предугадать, что из них будет первым, вследствие чего могут возникнуть сбои в работе программы.
<br>
<br>
Если по причине задержек Автоматизатор выполнял команду слишком долго, он будет выполнять следующие команды настолько
быстрее, чтобы в среднем он выполнял программу в положенном темпе.
<br>
<br>
См. вводную страницу Автоматизатора для дальнейшего ознакомления с ним.
<br>
<br>
<b>Горячая клавиша U</b> приостанавливает или возобновляет работу Автоматизатора.
`,
      isUnlocked: () => Player.automatorUnlocked,
      tags: ["автоматизатор", "программа"],
      tab: "automation/automator"
    }, {
      name: "Чёрная Дыра",
      info: () => `
<b>Чёрная Дыра</b> периодически значительно ускоряет игру. Это ускорение влияет в том числе и на все эффекты, зависящие
от времени, и на время в статистике. С этого момента в игре существует два времяисчисления: <i>игровое</i> - с учётом
эффекта Чёрной Дыры, и <i>реальное</i> - без него, то есть такое же, как и в реальной жизни. По умолчанию слово "время"
в игре означает именно игровое время. Автоматика работает по реальному времяисчислению. Все остальные механики,
разблокированные до реальности, и большинство механик, разблокирующихся после реальности, работают по игровому
времяисчислению, в том числе репликация и производство Замедленного Времени. Сама Чёрная Дыра, очевидно, работает по
реальному времяисчислению. Отношение игрового времени к реальному времени, за которое оно проходит, называется скоростью игры.
<br>
<br>
Изначально эффект Чёрной Дыры слаб, так как длится очень короткое время, но вы можете улучшать его за Машины Реальности.
Существует три Улучшения Чёрной Дыры:
<br>
<b>Уменьшение длительности фазы бездействия на ${formatPercents(0.2)}</b> (начальная цена: ${formatInt(15)} МР, наценка ${formatX(3.5, 0, 1)}).
<br>
<b>Увеличение эффекта на ${formatPercents(0.35)}</b> (начальная цена: ${formatInt(20)} МР, наценка: ${formatX(2)}).
<br>
<b>Увеличение длительности фазы действия на ${formatPercents(0.3)}</b> (начальная цена: ${formatInt(10)} МР, наценка: ${formatX(4)}).
<br>
После ${format(1e30)} МР наценка на возрастает на  ${format(0.2, 1, 1)} каждую покупку, после ${format(Number.MAX_VALUE, 1)}
МР цена резко возрастает до ${format(DC.E310)} МР, а наценка - до ${formatX(1e6)}, причём прошлый рост наценки прекращается,
и вместо этого наценка начинает возрастать в ${formatInt(10)} раз за покупку.
<br>
<br>
Проведя в игре ${formatInt(100)} дней по <i>игровому</i> времяисчислению, вы разблокируете Улучшение Реальности,
разблокирующее 2-ю Чёрную Дыру, которая работает так же, как и 1-я. Цикл активности 2-й Чёрной Дыры продвигается, только
пока действует 1-я Чёрная Дыра. Например, если фаза действия 1-й Чёрной Дыры длится ${formatInt(4)} минуты, а цикл
активности 2-й - ${formatInt(8)} минут, то 2-я Чёрная Дыра будет активироваться каждые ${formatInt(2)} цикла 1-й
Чёрной Дыры вне зависимости от длительности фазы бездействия последней. Таймер в заглавии, отсчитывающий время до
активации Чёрных Дыр, учитывает эту особенность их поведения, внутренний же их таймер, на который влияют Улучшения
Чёрных Дыр, вы можете просмотреть во вкладке "Чёрная Дыра". Эффекты Чёрных Дыр перемножаются.
<br>
<br>
Улучшения 2-й Чёрной Дыры изначально стоят в ${formatInt(1000)} раз больше, чем сответствующие Улучшения 1-й Чёрной Дыры,
но имеют все те же самые наценки.
<br>
<br>
Обратите внимание, что под словосочетанием "Чёрная Дыра" может пониматься совокупное действие Чёрных Дыр, когда они неразличимы.
<br>
<br>
Когда длительность фазы действия Чёрной Дыры составляет хотя бы ${formatPercents(0.9999, 2)} всего цикла её активности,
она начинает действовать беспрерывно.
<br>
<br>
Чёрная Дыра особым образом взаимодействует с офлайн-прогрессом, см. статью "Офлайн-прогресс".
<br>
<br>
Вы можете в любой момент приостановить Чёрную Дыру, чтобы её цикл активности не продвигался. Эту функцию можно использовать,
чтобы контролировать то, какие стадии реальности получают эффект Чёрной Дыры. Однако после возобновления цикла Чёрной Дыры
её эффект аннулируется и экспоненциально восстаналивается в течение ${BlackHoles.ACCELERATION_TIME} секунд по реальному времяисчислению.
При этом цикл активности Чёрной Дыры продвигается, так что вы теряете часть игрового времени. Одна Чёрная Дыра не может быть
приостановлена отдельно от другой. Существует опция автоматической приостановки Чёрных Дыр за ${BlackHoles.ACCELERATION_TIME}
секунд перед активацией, которая находится во вкладке "Чёрная Дыра".
<br>
<br>
<b>Горячая клавиша B</b> приостанавливает или возобновляет цикл активности Чёрной Дыры.
`,
      isUnlocked: () => player.blackHole[0].unlocked,
      tags: ["чёрная", "дыра", "времяисчисление", "игровое", "реальное", "улучшение", "скорость", "игры", "время"],
      tab: "reality/hole"
    }, {
      name: "Пожертвование Глифов",
      info: () => `
Купив соответствующее Улучшение Реальности, вы можете удалять глифы за определённые бонусы, что называется <i>Пожертвованием Глифов</i>.
Вы можете просмотреть эти бонусы во вкладке "Глифы", там же, где находится список действующих эффектов глифов.
<br>
<br>
У каждого глифа есть <i>жертвенная ценность</i> - положительное число, которое зависит от его уровня и редкости, но не зависит
от его типа и эффектов. Чем оно больше, тем больший бонус вы получите, когда пожертвуете этот глиф.
<br>
<br>
Бонусы от Пожертвования Глифов разделены по типам глифов. Каждый бонус зависит от суммарной жертвенной ценности всех
пожертвованных глифов соответствующего типа.
<br>
<br>
Рекомендуется жертвовать все глифы, которые вы не собираетесь активировать, так как нет смысла держать их в инвентаре.
`,
      isUnlocked: () => RealityUpgrade(19).isBought,
      tags: ["пожертвование", "глиф", "жертвенная", "ценность"],
      tab: ""
    }, {
      name: "Тереза, Небожитель Реальности",
      alias: "Тереза",
      info: () => `
<b>Тереза</b> - первый <i>Небожитель</i>.
<br>
<br>
В её вкладке вы можете видеть вертикальную полоску с кнопкой "Заливать МР". Полоска символизирует контейнер, в который вы
можете помещать (<i>заливать</i>) МР, что даёт вам множитель к получению Машин Реальности. Залитые МР не подлежат возвращению
в свободный доступ. При достижении определённых количеств залитых МР вы получаете определённые бонусы. На ${format(TeresaUnlocks.run.price)}
залитых МР разблокируется Реальность Терезы.
<br>
<br>
<i>Реальность</i> имеет не только Тереза, но и все последующие Небожители. В сущности это испытание высшего уровня, которое
выполняется в отдельной реальности.
<br>
<br>
Реальность Терезы можно выполнять сколь угодно много раз, и её награда зависит от рекордного достигнутого в ней количества антиматерии.
<br>
<br>
Следующий Небожитель разблокируется на ${format(TeresaUnlocks.effarig.price)} залитых МР.
`,
      isUnlocked: () => Teresa.isUnlocked,
      tags: ["залитая", "тереза", "небожитель", "реальность"],
      tab: "celestials/teresa"
    }, {
      name: "Эффариг, Небожитель Древних Реликвий",
      alias: "Эффариг",
      info: () => `
<b>Эффариг</b> - второй Небожитель.
<br>
<br>
Разблокируется одновременно с новой валютой - <i>Реликтовыми Осколками</i>, которые вы получаете на реальности в зависимости
от двух факторов: количества Очков Вечности, которые вы могли иметь в момент совершения реальности, и количества различных
действующих эффектов глифов. Как правило, второй фактор играет гораздо более важную роль. Реликтовые Осколки можно
тратить на Улучшения Эффарига.
<br>
<br>
Реальность Эффарига разблокируется последним Улучшением Эффарига, которое стоит ${format(GameDatabase.celestials.effarig.unlocks.run.cost)}
Реликтовых Осколков.
${EffarigUnlock.run.isUnlocked
    ? "Она разделена на три слоя: бесконечности, вечности и реальности. Вы выполняете их по отдельности именно в таком порядке, " +
      "переходя по завершении предыдущего слоя Реальности на следующий. Каждый слой при выполнении даёт уникальную награду. " +
      "Для выполнения слоя нужно совершить в Реальности Эффарига соответствующий престиж. Разблокировка следующего Небожителя - " +
      "награда за Реальность на слое вечности."
    : "<div style='color: var(--color-effarig--base);'>Разблокируйте Реальность Эффарига, чтобы просмотреть подробности о ней.</div>"
}
`,
      isUnlocked: () => TeresaUnlocks.effarig.canBeApplied,
      tags: ["эффариг", "небожитель", "осколок", "реликтовый", "улучшение", "слой"],
      tab: "celestials/effarig"
    }, {
      name: "Продвинутое управление глифами",
      info: () => `
<b>Корректировка весов факторов уровня глифа</b> разблокируется первым Улучшением Эффарига. Оно даёт вам возможность
указать, в какой степени четыре основных количества ресурсов (ОВ, ЗВ, Репликанти и вечностей), от которых зависит уровень
получаемого глифа, влияют на него.
<br>
<br>
<b>Фильтр Глифов</b> разблокируется вторым Улучшением Эффарига. Это автоматическая система, которая выбирает глиф на
реальности и, возможно, жертвует его согласно заданным настройкам. Фильтр Глифов имеет несколько режимов, определяющих
его поведение, из которых можно выбрать один. Существует три базовых режима:
<br>
<b>Справедливое пожертвование:</b> выбирает глиф того типа, суммарная ценность пожертвованных глифов которого наименьшая,
при этом выбранный глиф всегда жертвуется.
<br>
<b>Количество эффектов:</b> выбирает глиф с наибольшим количеством эффектов, при равенстве отдавая предпочтение глифам
более высокой редкости. Вы можете указать наименьшее количество эффектов, которое должны иметь глифы, чтобы Фильтр принял их.
<br>
<b>Редкость:</b> для каждого типа глифов вы выставляете порог редкости, ниже которого глифы этого типа не принимаются.
Фильтр выбирает глиф, редкость которого превышает порог на наибольшее значение.
<br>
Также существует два продвинутых режима:
<br>
<b>Указанные эффекты:</b> для каждого типа глифов вы указываете, во-первых, порог редкости, во-вторых, порог количества
эффектов и, в-третьих, минимальный набор конкретных эффектов, которые глиф должен иметь. Чтобы глиф был выбран, он должен
соответствовать всем трём требованиям сразу. Фильтр выбирает глиф, редкость которого превышает порог на наибольшее значение.
Вы можете выставить порог количества эффектов на недостижимое значение (например, ${formatInt(5)} эффектов для Глифов Силы),
и тогда все глифы соответствующего типа будут отвергаться.
<br>
<b>Взвешенные эффекты:</b> для каждого эффекта вы указываете количество баллов, которые глифы получают за наличие этого
эффекта. Оценка глифа вычисляется как сумма его редкости в процентах и этих баллов. Для каждого типа глифов вы указываете
порог оценки, необходимой для принятия глифов этого типа. Фильтр выбирает глиф, оценка которого превышает порог на
наибольшее значение. Обратите внимание, что оценка глифа отображается как разность настоящей оценки и порога принятия.
Вы можете выставить порог оценки на недостижимое значение (например, ${formatInt(999)} для Глифов Силы, если все эффекты
стоят по ${formatInt(0)} баллов), и тогда все глифы соответствующего типа будут отвергаться.
<br>
<br>
Выбранный режим Фильтра Глифов применяется ко всем типам глифов. У каждого режима есть собственные настройки, которые
сохраняются при переключении на другой режим, но перестают действовать. Настройки режимов Фильтра Глифов можно
экспортировать и импортировать, как сохранения.
<br>
<br>
Автоматизатор также имеет доступ к оценке глифа, выбираемого Фильтром.
<br>
<br>
Третье Улучшение Эффарига разблокирует возможность сохранять и загружать наборы глифов, как Древа Исследований.
`,
      isUnlocked: () => EffarigUnlock.adjuster.isUnlocked,
      tags: ["глиф", "вес", "фильтр", "фактор", "режим", "оценка"],
      tab: ""
    }, {
      name: "Глифы Эффарига",
      info: () => `
<b>Глифы Эффарига</b> - это новый тип глифов, который имеет несколько отличий от всех остальных.
<br>
<br>
У Глифов Эффарига бывает семь различных эффектов, но каждый глиф может иметь не более четырёх. Кроме того, есть два эффекта,
которые не могут сосуществовать в одном Глифе Эффарига: множитель к получению Машин Реальности и отсрочка неустойчивости
глифов (мягкого ограничения на их уровень). Все наборы эффектов, не содержащие оба из них, равновероятны.
<br>
<br>
Одновременно может действовать не более чем один Глиф Эффарига.
`,
      isUnlocked: () => Effarig.currentStage === 4,
      tags: ["эффарига", "глиф"],
      tab: ""
    }, {
      name: "Безымянные, Небожитель Времени",
      alias: "Безымянные",
      info: () => `
<b>Безымянные</b> - третий Небожитель.
<br>
<br>
Разблокируется одновременно с двумя новыми механиками: <i>хранением</i> игрового и реального времени.
<br>
<br>
Вы можете <i>заряжать</i> Чёрную Дыру, что отключает все множители к скорости игры. При этом всё потерянное игровое время
сохраняется. Впоследствии вы можете в любой момент разрядить Чёрную Дыру, тратя всё сохранённое игровое время, чтобы на него
перепрыгнуть. Таким образом, вы сосредоточиваете скорость игры в одной временной точке. Это позволяет вам переносить
эффекты множителей к скорости игры во времени.
<br>
<br>
Также за сохранённое игровое время покупаются оба Улучшения Безымянных.
<br>
<br>
Хранение реального времени полностью останавливает всё производство, выставляя скорость игры на ${formatInt(0)}.
При этом вы сохраняете ${formatPercents(0.7)} от проходящего реального времени. Существует ограничение на количество
сохранённого реального времени (по умолчанию ${timeDisplayNoDecimals(7 * 60 * 60000)}). Сохранённое реальное время можно
использовать, чтобы <i>усилить</i> реальность (из вкладки "Глифы"), симулируя её столько раз, сколько вы бы смогли повторить
её за это время. При этом вы получаете все те же награды, что и от обычной реальности, но тратите всё сохранённое реальное
время. Например, если у вас ${formatInt(50)} минут сохранённого реального времени, и вы усиливаете реальность, которая
продлилась ${formatInt(10)} минут, вы получите в ${formatInt(5)} раз больше МР, Реликтовых Осколков и Очков Умения, а также
не ${formatInt(1)}, а сразу ${formatInt(5)} глифов, выбранных согласно Фильтру Глифов.
<br>
<br>
Однако, если вы усиливаете реальность, которая длилась менее секунды, вы усилите её, как если бы она длилась ровно одну
секунду, при этом потратив не всё сохранённое реальное время, а лишь соответствующую часть. Например, если у вас
${formatInt(1000)} секунд сохранённого реального времени, и вы усиливаете реальность, которая продлилась ${format(0.2, 2, 2)}
секунды, вы потратите ${formatInt(200)} секунд сохранённого реального времени и симулируете ${formatInt(1000)} реальностей.
<br>
<br>
Существует опция, которая автоматически сохраняет время, проведённое офлайн.
<br>
<br>
Реальность Безымянных разблокируется вторым Улучшением Безымянных, которое стоит
${format(TimeSpan.fromMilliseconds(ENSLAVED_UNLOCKS.RUN.price).totalYears)} лет сохранённого игрового времени.
`,
      isUnlocked: () => EffarigUnlock.eternity.isUnlocked,
      tags: ["безымянные", "хранение", "игровое", "реальное", "время", "чёрная", "дыра", "зарядка", "разрядка", "сохранённое", "небожитель", "улучшение"],
      tab: "celestials/enslaved"
    }, {
      name: "Тессеракты",
      info: () => `
<b>Тессеракт</b> - это повторяемое Улучшение Бесконечности особого рода.
<br>
<br>
Как известно, существует ограничение на покупку всех Измерений Бесконечности, кроме 8-го, по умолчанию равное
${format(InfinityDimensions.HARDCAP_PURCHASES)}. Теперь оно увеличено в зависимсоти от количества Тессерактов,
которые покупаются за Очки Бесконечности.
<br>
<br>
Тессеракты никогда не сбрасываются.
<br>
<br>
Вы можете покупать Тессеракты из вкладки "Измерения Бесконечности". Теперь под количеством Очков Бесконечности в правом
верхнем углу экрана отображается процент до следующего Тессеракта. Когда вы можете купить Тессеракт, кнопка Большого Сжатия
сияет и перенаправляет вас во вкладку "Измерения Бесконечности".
`,
      isUnlocked: () => Enslaved.isCompleted,
      tags: ["тессеракт", "улучшение", "иб"],
      tab: "celestials/tesseract"
    }, {
      name: "Ви, Небожитель Достижений",
      alias: "Ви",
      info: () => `
<b>Ви</b> - четвёртый Небожитель.
<br>
<br>
Достижение 151 формально разблокирует Ви, но на самом деле новый контент представляет собой его Реальность. Чтобы её
разблокировать, вы должны одновременно выполнить все требования, указанные во вкладке "Ви".
<br>
<br>
${VUnlocks.vAchievementUnlock.isUnlocked
    ? `За выполнение Реальности Ви не предусмотрено награды. Вместо этого существует шесть <i>достижений Ви</i>, которые
      могут быть выполнены только внутри Реальности Ви. Они не сбрасываются при выходе из Реальности.
      <br>
      <br>
      Каждое достижение Ви имеет шесть уровней, подобно тому как каждое Испытание Вечности имеет пять уровней, и у каждого
      следующего уровня цель выше, чем у предыдущего.
      <br>
      <br>
      При выполнении определённых количеств уровней достижений Ви вы получаете <i>этапы Ви</i>.
      <br>
      <br>
      За каждый выполненный уровень достижения Ви вы получаете по одной <i>Теореме Пространства</i>, которые могут быть
      потрачены на покупку взаимоисключающих наборов Исследований Времени. На первое купленное Исследование из
      взаимоисключающего набора вы тратите только Теоремы Времени, а на все последующие - как ТВ, так и Теоремы Пространства.
      Теоремы Пространства также возвращаются вам при сбросе Древа Исследований.
      <br>
      <br>
      Первый этап Ви разблокирует возможность понижать цели достижений Ви за Очки Умения. Кнопки для этого расположены под
      соответствующими достижениями Ви. Но цель достижения "Рыцарь глифов" не может быть понижена.
      <br>
      <br>
      Следующий Небожитель разблокируется последним Этапом Ви, для получения которого требуется выполнить все
      ${formatInt(36)} уровней достижений Ви.`
    : "<span style='color: var(--color-bad);'>Разблокируйте Реальность Ви, чтобы просмотреть подробности о ней и связанным с ней контентом.</span>"}
`,
      isUnlocked: () => Achievement(151).isUnlocked,
      tags: ["ви", "достижение", "теорема", "пространства", "этап"],
      tab: "celestials/v"
    }, {
      name: "Ра, Небожитель Забвения",
      alias: "Ра",
      info: () => `
<b>Ра</b> - пятый Небожитель.
<br>
<br>
За выполнение Реальности Ра не предусмотрено награды. Вместо этого внутри неё вы производите <i>Куски Памяти</i>
в зависимости от определённых параметров. Существует четыре типа Кусков Памяти, каждый из которых ассоциирован со своим
Небожителем среди четырёх предыдущих - Терезы, Эффарига, Безымянных и Ви. Изначально только Тереза получает Куски Памяти,
впоследствии вы разблокируете Куски Памяти остальных Небожителей.
<br>
<br>
Каждый тип Кусков Памяти производит <i>Память</i> соответствующего Небожителя. В отличие от Кусков Памяти, Память
производится вне зависимости от того, находитесь ли вы в Реальности Ра. Кроме того, хранение реального времени не
препятствует производству Памяти.
<br>
<br>
У каждого Небожителя есть три улучшения, которые можно покупать за его Память:
<br>
<b>Воспоминание</b> - увеличивает производство Памяти на ${formatPercents(0.3)}.
<br>
<b>Разделение</b> - увеличивает производство Кусков Памяти на ${formatPercents(0.5)}.
<br>
<b>Повышение на один уровень.</b> Каждый Небожитель даёт определённый бонус в зависимости от своего уровня.
<br>
<br>
На ${formatInt(Ra.remembrance.requiredLevels)} уровнях по всем Небожителям в сумме вы разблокируете <i>Напоминание</i>.
Оно позволяет выбрать Небожителя, чтобы он получал в ${formatInt(5)} раз больше Кусков Памяти, но остальные будут
получать в ${formatInt(2)} раза меньше.
`,
      isUnlocked: () => VUnlocks.raUnlock.isUnlocked,
      tags: ["память", "ра", "небожителя", "уровень", "воспоминание", "разделение", "кусок", "улучшение", "напоминание"],
      tab: "celestials/ra"
    }, {
      name: "Эффекты от Ра",
      info: () => `
В эту статью вошли эффекты от Ра, каждый из которых достаточно понятен, чтобы не заслуживать отдельной статьи,
но всё равно должен быть объяснён.
<br>
<br>
<b>Тереза</b>
<br>
<br>
За каждые ${formatInt(2)} уровня вы можете зарядить по одному Улучшению Бесконечности. При этом его эффект замещается другим,
как правило, гораздо более сильным, который зависит от уровня Терезы. <i>Заряженные Улучшения Бесконечности</i> можно
сбрасывать на реальности, возвращая право заряжать то же самое количество улучшений.
<br>
На ${formatInt(10)}-м уровне разблокируется <i>Расширение Глифов</i>. Это не новая механика, а просто набор бонусов к эффектам
глифов, каждый из которых разблокируется при определённой суммарной ценности пожертвованных глифов данного типа. Список этих
бонусов вы можете найти там же, где и информацию о Пожертовании Глифов.
<br>
<br>
<b>Эффариг</b>
<br>
<br>
Разблокирует алхимию, которой посвящена отдельная статья.
<br>
<br>
<b>Безымянные</b>
<br>
<br>

${Ra.unlocks.enslavedUnlock.canBeApplied
    ? "В зависимости от уровня вы получаете больше сохранённого игрового времени. Это делает выгодным заряжать и разряжать " +
      `Чёрную Дыру вне зависимости от скорости игры. На ${formatInt(10)}-м уровне разблокируется <i>пульсирование</i> ` +
      "Чёрной Дыры - настройка, совершающая эти действия автоматически. Кроме того, при разрядке начинает расходоваться " +
      `не всё игровое время, а только ${formatPercents(0.99)}, что делает её эффект более долгоиграющим.`
    : "<span style='color: var(--color-bad);'>Разблокируете Память Безымянных, чтобы просмотреть информацию.</span>"}
<br>
<br>
<b>Ви</b>
<br>
<br>
${Ra.unlocks.vUnlock.canBeApplied
    ? `Каждые ${formatInt(6)} уровней разблокируется новое <i>Тройственное Исследование</i>. Это особые Исследования ` +
      "Времени, которые покупаются за Теоремы Пространства. Чтобы купить Тройственное Исследование, необходимо купить " +
      "все три окружающих его Исследования Времени.\n" +
      `На ${formatInt(6)}-м уровне разблокируются три <i>супер-достижения Ви</i>, каждое из которых имеет по пять уровней. ` +
      "Как и обычные достижения Ви, они могут быть выполены лишь внутри Реальности Ви. Каждый выполенный уровень " +
      "супер-достижения Ви приравнивается к двум выполненным уровням обычных достижений Ви и, в частности, даёт две " +
      "Теоремы Пространства, а не одну."
    : "<span style='color: var(--color-bad);'>Разблокируете Память Ви, чтобы просмотреть информацию.</span>"}
`,
      isUnlocked: () => VUnlocks.raUnlock.isUnlocked,
      tags: ["заряженное", "зарядить", "улучшение", "бесконечности", "расширение", "глифов", "пульсирование",
        "тройственное", "исследование", "супер-достижение", "ви", "ра"],
      tab: ""
    }, {
      name: "Алхимия",
      info: () => `
<b>Алхимические ресурсы:</b> вы можете удалять глифы, получая за это некоторое количество алхимического ресурса,
соответствующего типу удаляемого глифа. Эта операция называется <i>облагораживанием</i> глифа. Чтобы облагородить глиф,
откройте панель "Удаление глифов" и выберите подходящую опцию, а затем сделайте то же самое, что и при пожертвоании глифа.
Количество алхимического ресурса, которое вы получаете, называется алхимической ценностью глифа. Каждый алхимический ресурс
разблокируется на определённом уровне Эффарига и даёт определённый бонус.
<br>
<br>
Количество каждого основного алхимического ресурса имеет ограничение, зависящее от наибольшего из уровней облагороженных
глифов соответствующего типа. Если при облагораживании глифа ограничение возрастает, то количество получаемого ресурса
подчиняется новому ограничению.
<br>
(Формула: x<sup>${formatInt(3)}</sup>/${format(1e8)}.)
<br>
Алхимическая ценность глифа равна ${formatPercents(GlyphSacrificeHandler.glyphRefinementEfficiency)} от произведения этого
значения для его уровня на его редкость.
<br>
<br>
<b>Алхимические реакции:</b> тратят одни алхимические ресурсы на производство других. Каждый алхимический ресурс,
разблокирующийся на ${formatInt(8)}-м уровне Эффарига или позднее, не может быть получен облагораживанием глифов, но
производится определёной алхимической реакцией, которую вы можете включить или выключить по желанию. Алхимические реакции
происходят рывками каждую реальность. Количество каждого производного алхимического ресурса ограничено наименьшим из
количеств производящих его ресурсов. На реальности при включенной реакции вы получаете ${formatPercents(0.015, 1, 1)} от
количества ресурса, недостающего до этого ограничения.
<br>
<br>
Чтобы переключить алхимическую реакцию, нажмите на значок производимого ею ресурса. Включенная реакция обозначается
линиями, движущимися от тратящегося ресурса к производимому. Если они соединены одной неподвижной линией, это значит,
что реакция не может пройти, так как их количества равны, и, соответственно, достигнуто ограничение.
`,
      isUnlocked: () => Ra.unlocks.unlockGlyphAlchemy.canBeApplied,
      tags: ["алхимия", "ресурс", "реакция", "облагораживание", "глиф", "облагородить", "алхимический"],
      tab: "reality/alchemy"
    }, {
      name: "Мнимые Улучшения",
      info: () => `
Вы достигли ограничения в ${format(MachineHandler.baseRMCap)} Машин Реальности.
<br>
<br>
Теперь у вас есть новый ресурс - <i>Мнимые Машины</i>. Они имеют ограничение, завиящее от рекордного количества МР, которое
вы могли бы получить на реальности, если бы ограничения не сущестовало. Мнимые Машины пассивно производятся так, что их
количество приближается к органичению экспоненциально по реальному времяисчислению (каждую минуту реального времени разность
между ограничением и вашим количеством ММ уменьшается вдвое).
<br>
<br>
<b>Мнимые Улучшения</b> имеют все те же механики, что и Улучшения Реальности, с той лишь разницей, что покупаются они за
Мнимые Машины.
`,
      isUnlocked: () => MachineHandler.isIMUnlocked,
      tags: ["мнимая", "машина", "улучшение"],
      tab: "reality/imag_upgrades"
    }, {
      name: "Лайтела, Небожитель Измерений",
      alias: "Лайтела",
      info: () => `
<b>Лайтела</b> - шестой Небожитель.
<br>
<br>
В отличие от предыдущих Небожителей, Лайтеле сопутствуют много новых механик, так что мы разбили их на несколько статей
("Континуум", "Измерения Тёмной Материи" и "Сингулярности"). В этом статье объясняется только её Реальность.
<br>
<br>
Реальность Лайтелы своеобразна. В ней пассивно производится <i>энтропия</i> в зависимости от количества антиматерии по
реальному времяисчислению. Цель Реальности - ${formatPercents(1)} энтропии, при её достижении вы принудительно покидаете
Реальность. Её можно выполнять сколь угодно много раз, и её награда зависит от рекордного времени выполнения. Когда вы
выполняете Реальность Лайтелы за ${formatInt(30)} секунд или быстрее, её условие становится жёстче: перестаёт действовать
производство всех измерений очередного уровня. Такое выполнение называется <i>дестабилизацией</i> Реальности. При первой
дестабилизации отключаются 8-е измерения всех видов, при второй - 7-е, и так далее. Рекорд выполнения Реальности Лайтелы
сбрасывается каждый раз, когда вы впервые выполняете её после очередной дестабилизации, но при этом награда становится гораздо сильнее.
`,
      isUnlocked: () => Laitela.isUnlocked,
      tags: ["лайтела", "энтропия", "дестабилизация"],
      tab: "celestials/laitela"
    }, {
      name: "Континуум",
      info: () => `
<b>Континуум</b> - это механика, замещающая покупку Измерений Антиматерии и ускорителей. Теперь каждое Измерение Антиматерии
и ускоритель имеет значение континуума, которое примерно равно количеству покупок, стоящих не больше, чем текущее
количество антиматерии, но изменяется непрерывно. При этом вы получаете множитель, равный множителю за покупку, возведённому
в степень значения континуума.
<br>
<br>
Конечно, эта механика была бы бесполезна сама по себе. Но в игре есть множители к значениям континуума, и первый из них вы
уже разблокировали - это эффект Тёмной Материи. При отключённом континууме эти множители не имеют эффекта, так что вы теряте
часть производства.
`,
      isUnlocked: () => Laitela.isUnlocked,
      tags: ["континуум", "значение"],
      tab: ""
    }, {
      name: "Измерения Тёмной Материи",
      info: () => `
<b>Измерения Тёмной Материи</b> - это очередной вид измерений. 1-е Измерение Тёмной Материи разблокируется одновременно с
Лайтелой и производит <i>Тёмную Материю</i>. В зависимости от рекордного количества Тёмной Материи вы получаете множитель
к значениям континуума. Вы получаете одно Измерение Тёмной Материи при его разблокировке, но не можете их покупать, в отличие
от измерений всех остальных видов. Однако вы можете покупать множители к ним за Тёмную Материю.
<br>
<br>
Ещё одна отличительная особенность Измерений Тёмной Материи заключается в том, что их производство не является непрервыным.
Вместо этого каждое из них осуществляет единичный объём произодства с некоторым интервалом по реальному времяисчислению,
который можно уменьшать за Тёмную Материю.
<br>
<br>
Каждое Измерение Тёмной Материи сопряжено с источником ещё одного ресурса - <i>Тёмной Энергии</i>. Эти источники также
осуществляют единичный объём производства Тёмной Энергии с тем же интервалом. Производство Тёмной Энергии также можно
увеличивать за Тёмную Материю.
<br>
<br>
Интервал каждого Измерения Тёмной Материи имеет ограничение в ${formatInt(10)}мс, при достижении которого вам становится
доступно <i>вознесение</i>, дающее множители ${formatX(500)} к этому измерению и производству сопряжённого с ним источника
Тёмной Энергии, но увеличивающее интервал в ${formatInt(1200)} раз. Таким образом, среднее производство уменьшается, но
вы вновь получаете возможность улучшать интервал. Вознесение можно повторить сколь угодно много раз.
<br>
<br>
<b>Аннигиляция</b> разблокируется Мнимым Улучшением "Детерминированная Радиация". Она сбрасывает количества Измерений Тёмной
Материи до ${formatInt(1)} и Тёмную Материю вместе с улучшениями за неё, но даёт множитель ко всем Измерениям Тёмной Материи
в зависимости от количества Тёмной Материи в момент аннигиляции. Её можно осуществлять сколь угодно много раз, но её
множитель накапливается аддитивно. Для аннигиляции требуется ${format(Laitela.annihilationDMRequirement)} Тёмной Материи.
`,
      isUnlocked: () => Laitela.isUnlocked,
      tags: ["измерение", "тёмная", "материя", "энергия", "интервал", "вознесение", "аннигиляция", "улучшение"],
      tab: ""
    }, {
      name: "Сингулярности",
      info: () => `
<b>Сингулярности</b> получаются путём сброса Тёмной Энергии, когда у вас её хотя бы ${formatInt(200)}. Это действие
называется <i>сжатием</i> и даёт вам одну Сингулярность. Обратите внимание, что оно не сбрасывает Измерения Тёмной Материи.
<br>
<br>
Достигнув ${formatInt(10)} Сингулярностей, вы разблокируете возможность получать по несколько Сингулярностей за одно сжатие.
Вам становится доступной возможность свободно в любое время изменять количество Тёмной Энергии, требуемое для сжатия,
в ${formatInt(10)} раз (с определёнными ограничениями). При этом количество Сингулярностей, получаемое на сжатии,
изменяется в ${formatInt(11)} раз в соответствующую сторону, что изменяет среднюю скорость получения Сингулярностей.
<br>
<br>
На определённых количествах Сингулярностей вам даются <i>Этапы Сигулярности</i>.
<br>
<br>
У каждого Этапа Сингулярности есть значок, указывающий, какого рода эффект оно даёт:
<br>
<b>ᛝ</b> внутренний эффект Лайтелы
<br>
<i class="fas fa-arrows-alt"></i> эффект вовне от механик Лайтелы
<br>
<i class="fas fa-compress-arrows-alt"></i> эффект извне к механикам Лайтелы
`,
      isUnlocked: () => Laitela.isUnlocked,
      tags: ["сингулярность", "тёмная", "энергия", "этап"],
      tab: ""
    }, {
      name: "Пелль, Небожитель Антиматерии",
      alias: "Пелль",
      info: () => `
<b>Пелль</b> - седьмой и последний Небожитель.
<br>
<br>
Имеет уникальную так называемую Обречённую Реальность, также известную как Обречение. В ней отключено большинство механик
игры. Рекомендуется запустить её (<i>обречь Реальность</i>) немедленно, так как почти ничего, что вы делали до Обречения,
не поможет вам после. <b>Из Обречённой Реальности невозможно выйти.</b>
<br>
<br>
Достижение технического ограничения в ${formatPostBreak(DC.E9E15)} антиматерии в Обречённой Реальности знаменует собой
торжество над Небожителями и полное прохождение игры.
<br>
<br>
По аналогии с Лайтелой, информация о Пелле разбита на несколько статей.
`,
      isUnlocked: () => Pelle.isUnlocked,
      tags: ["пелль", "обречённая", "реальность"],
      tab: "celestials/pelle"
    }, {
      name: "Армагеддон",
      info: () => `
<b>Армагеддон</b> - это престиж, который можно совершить в Обречении в любой момент, сбрасывающий всё то же, что и реальность.
Даёт <i>Останки</i> в зависимости от рекордного количества антиматерии, Очков Бесконечности и Очков Вечности, в зависимости от количества
которых производятся <i>Осколки Реальности</i> по реальному времяисчислению. Останки, аналогично Тахионам, не накапливаются.
<br>
<br>
Осколки Реальности могут быть портачены на <i>Улучшения Пелля</i>.
<br>
<br>
<b>Горячая клавиша Z</b> совершает армагеддон.
`,
      isUnlocked: () => Pelle.isUnlocked,
      tags: ["армагеддон", "сброс", "престиж", "останок", "осколок", "реальности", "улучшение", "пелля"],
      tab: ""
    }, {
      name: "Разломы и Удары Пелля",
      info: () => `
<b>Удары Пелля</b> - это различные необратимые ослабления, которыми вас наказывает Пелль за достижение определённых стадий
прогресса в Обречённой Реальности. Они не сбрасываются даже на армагеддоне.
<br>
<br>
<b>Разломы</b> разблокируются Ударами Пелля в качестве компенсации (каждому Удару Пелля соответствует свой Разлом).
Чтобы получить эффект от Разлома, нужно заполнять его, что можно сделать, нажав на полоску Разлома (на ней появится
надпись "Заполняется"). При этом ${formatPercents(0.03)} соответствующего ресурса в секунду реального времени будет
уходить в Разлом. Ресурсы в Разломах не подлежат возвращению в свободный доступ. От каждого Разлома вы получаете
определённый эффект, который зависит от общего количества ресурса, расходованного на него. Кроме того, при достижении
определённых количеств расходованного ресурса вы получаете дополнительные бонусы. У каждого Разлома есть определённая
максимальная ёмкость. Вы можете свободно включать и выключать заполнение Разломов в любое время, но одновременно можно
заполнять не более двух Разломов.
`,
      isUnlocked: () => PelleStrikes.infinity.hasStrike,
      tags: ["удар", "пелля", "разлом"],
      tab: ""
    }, {
      name: "Генератор Галактик",
      info: () => `
<b>Генератор Галактик</b> производит очередной независимый тип галактик без названия по реальному времяисчислению.
У него есть пять повторяемых улучшений, направленнных на увеличение производства галактик. Цена первых двух из них
выражена в галактиках - имеются в виду только Галактики Антиматерии и галактики, произведённые Генератором.
<br>
<br>
Существует ограничение на количество галактик, которое может произвести Генератор. Это ограничение можно увеличивать,
но придётся избавляться от Разломов. Рекомендуется всегда делать это немедленно.`,
      isUnlocked: () => Pelle.hasGalaxyGenerator,
      tags: ["генератор", "галактика", "улучшение"],
      tab: ""
    }
  ]
};

(function() {
  for (let i = 0; i < h2p.tabs.length; i++) {
    const tab = h2p.tabs[i];
    tab.id = i;
    if (tab.alias === undefined) tab.alias = tab.name;

    tab.searchTermsRelevance = {};
  }

  const searchIndex = {};

  const addTerm = (term, tab) => {
    let entry = searchIndex[term];
    if (entry === undefined) {
      entry = [];
      searchIndex[term] = entry;
    }
    if (entry.includes(tab)) return;
    entry.push(tab);
  };

  const addWord = (word, tab) => {
    const lowerCase = word.toLowerCase();
    for (let i = 0; i < lowerCase.length; i++) {
      const term = lowerCase.slice(0, i + 1);
      addTerm(term, tab);
      if (tab.searchTermsRelevance[term] === undefined) {
        tab.searchTermsRelevance[term] = ((i + 1) / lowerCase.length) ** 0.65;
      } else {
        tab.searchTermsRelevance[term] = Math.max(tab.searchTermsRelevance[term], ((i + 1) / lowerCase.length) ** 0.65);
      }
    }
  };

  const addPhrase = (phrase, tab) => {
    addWord(phrase, tab);
    for (const part of phrase.split(" ")) {
      addWord(part, tab);
    }
  };

  for (const tab of h2p.tabs) {
    addPhrase(tab.name, tab);
  }
  for (const tab of h2p.tabs) {
    for (const tag of tab.tags) {
      addPhrase(tag, tab);
    }
  }
  for (const tab of h2p.tabs) {
    addPhrase(tab.alias, tab);
  }

  const map2dToObject = function(arr, keyFun, valueFun) {
    const out = {};
    for (let idx1 = 0; idx1 < arr.length; idx1++) {
      for (let idx2 = 0; idx2 < arr[idx1].length; idx2++) {
        out[keyFun(arr[idx1][idx2], idx1, idx2)] = valueFun(arr[idx1][idx2], idx1, idx2);
      }
    }
    return out;
  };

  // Very suboptimal code coming up. If anybody has a better solution, PLEASE, implement it.
  const keyboardify = keybrd => map2dToObject(keybrd.split(",").map(str => str.split("")),
    key => key, (_key, x, y) => ({ x, y }));

  const keyboardRussian = keyboardify(`ё,йцукенгшщзхъ,фывапролджэ,ячсмитьбю`);

  const keyboardDist = function(a, b, keyboard) {
    const aPos = keyboard[a], bPos = keyboard[b];
    if (!aPos || !bPos) return 100;
    return Math.max(Math.abs(aPos.x - bPos.x), Math.abs(aPos.y - bPos.y));
  };

  // I copied this code based on OSA distance off wikipedia, with a few added changes.
  // The cost for "substitution" (third item of the first Math.min) is replaced from a static value
  // to a function which roughly estimates how likely the user is to mispress the key based on its
  // minimum distance from several common keyboard layouts.
  // I have no idea how the actual "distance" calculation works but as long as it does don't touch it.
  const howBadlyTypoedWithKeyboard = function(a, b, keyboard) {
    // If they're the same, skip all calculations
    if (a === b) return 0;
    const aLen = a.length;
    const bLen = b.length;
    // If they're way too different, don't bother
    if (Math.abs(aLen - bLen) > 3) return 100;
    // 2d Array with dimensions aLen + 1 x bLen + 1
    const d = new Array(aLen + 1).fill(0).map(() => new Array(bLen + 1).fill(0));

    for (let i = 0; i <= aLen; i++) {
      d[i][0] = i;
    }
    for (let i = 0; i <= bLen; i++) {
      d[0][i] = i;
    }

    for (let i = 1; i <= aLen; i++) {
      for (let j = 1; j <= bLen; j++) {
        const distance = keyboardDist(a[i - 1], b[j - 1], keyboard);
        const cost = distance === 0 ? 0 : 0.3 + distance * distance * 0.25;
        d[i][j] = Math.min(
          d[i - 1][j] + 0.55,
          d[i][j - 1] + 0.7,
          d[i - 1][j - 1] + cost
        );
      }
    }
    return d[aLen][bLen];
  };

  const howBadlyTypoed = function(a, b) {
    // Arbitrarily large number
    let minTypoed = 1e10;
    minTypoed = Math.min(minTypoed, howBadlyTypoedWithKeyboard(a, b, keyboardRussian));
    return minTypoed;
  };

  const specialChars = ["'", "\"", ",", "-", ".", "_"];

  const replaceSpecialChars = function(str) {
    let result = str;
    for (const i of specialChars) {
      result = result.replaceAll(i, "");
    }
    return result;
  };

  // There are a LOT of magic numbers in this code, mostly from arbitrary choices for "What number is large enough to
  // act as a placeholder for 'basically not found'?"
  // This will need some cleanup if possible.
  h2p.search = query => {
    const truncatedQuery = replaceSpecialChars(query);
    if (truncatedQuery === "") return h2p.tabs.map(x => ({ tab: x, relevance: 1.5 }));
    const searchTerms = truncatedQuery.toLowerCase().split(" ").filter(str => str !== "");

    // A higher "Relevance" value actually means it's further away from the search, important to keep in mind
    const relevances = Array.repeat(1e4, h2p.tabs.length);
    for (const searchWord of searchTerms) {
      const minimumRequirement = Math.min(searchWord.length - 0.9, 3) * 0.5;
      for (const searchIndexStr in searchIndex) {
        const typoThreshold = howBadlyTypoed(replaceSpecialChars(searchIndexStr), searchWord);
        if (typoThreshold < minimumRequirement) {
          for (const tab of searchIndex[searchIndexStr]) {
            const maxRelevance = tab.searchTermsRelevance[searchIndexStr];
            const decrease = Math.max(maxRelevance * 1.6 - 0.9, 0);
            relevances[tab.id] = Math.min(relevances[tab.id], Math.max(typoThreshold, 1 - maxRelevance) - decrease);
          }
        }
      }
    }
    const results = h2p.tabs.filter(x => relevances[x.id] < 0.9)
      .map(x => ({ tab: x, relevance: relevances[x.id] }));
    // Provide both the relevance and the tab itself

    // Sort by id first, then push more relevant results to top.
    results.sort((a, b) => a.tab.id - b.tab.id).sort((a, b) => a.relevance - b.relevance);
    // Provide both the relevance and the tab itself
    return results;
  };
}());
